datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
}

model Account {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @map("user_id") @db.ObjectId
  type               String
  provider           String
  providerAccountId  String   @map("provider_account_id")
  refresh_token      String?
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @map("user_id") @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  username          String?    @unique
  email             String?    @unique
  hashedPassword    String?
  emailVerified     DateTime?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  firstName         String?
  lastName          String?
  bio               String?
  role              String     @default("user")
  image             String?    @default("https://icons8.com/icon/8Lja4gaCOUfO/fish")
  accounts          Account[]
  sessions          Session[]
  purchases         Purchase[] 
  subscriptionType  String?    @default("free")
  subscriptionStart DateTime?  @default(now())
  subscriptionEnd   DateTime?  
  source            String    
  fishcoins         Int        @default(0)
  rerollcoins       Int        @default(0)
  superrerollcoins  Int        @default(0)
  
  @@map("users")
}

enum SubscriptionType {
  Free
  Premium
  PremiumPlus
  VIP
  VIPPlus
}

enum Source {
  Facebook
  Google
  Twitter
  Instagram
  Twitch
  TikTok
  YouTube
  InPerson
  Other
}

enum Role {
  ADMIN
  MOD
  USER
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Purchase {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  products   Products[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  total      Float
  userId     String     @map("user_id") @db.ObjectId
  user       User?      @relation(fields: [userId], references: [id])

  @@map("purchase")
}

model Products {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  category    String
  price       Float
  image       String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  purchase    Purchase?  @relation(fields: [id], references: [id])

  @@map("products")
}

enum Category {
    COMIC
    APPAREL
    COLLECTABLES
    DIGITAL
}